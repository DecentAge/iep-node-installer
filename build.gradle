buildscript {
    repositories {
        gradlePluginPortal()
    }

    dependencies {
        classpath 'com.bmuschko:gradle-izpack-plugin:3.2'
    }
}

plugins {
	id 'java'
	id 'eclipse'
	id 'com.bmuschko.izpack' version '3.2'
	id "de.undercouch.download" version "4.1.2"
}

ext {
    downloadFolder = file("${buildDir}/downloads")
}

eclipse {
    classpath {
        downloadJavadoc = true
        downloadSources = true
    }
}

repositories {
    jcenter()
}

sourceCompatibility = 11
targetCompatibility = 11

configurations {
  izpackUtils {
    transitive = false
  }
}

dependencies {
    izpack 'org.bidib.org.codehaus.izpack:izpack-ant:5.2.0.M2'
    izpackUtils 'org.bidib.org.codehaus.izpack:izpack-wrapper:5.2.0.M2'
    compileOnly 'org.bidib.org.codehaus.izpack:izpack-compiler:5.2.0.M2'
}

izpack {
    baseDir = file("${buildDir}/resources/main")
    installFile = file("${buildDir}/resources/main/install.xml")
    outputFile = file("${buildDir}/distributions/iep-node-installer.jar")
    compression = 'default'
    compressionLevel = 9
    appProperties = ["iep.node.path": file("../iep-node")]
}


task unpackSharedLibs(type: Copy) {
    def outputDir = file("${buildDir}/izpack-utils")
    from zipTree(configurations.izpackUtils.singleFile)
    into outputDir
}


task downloadLinuxLibs(type: Download) {
	downloadFolder.mkdirs()
    src([
        'https://phoenixnap.dl.sourceforge.net/project/dos2unix/dos2unix/7.3.3/dos2unix-7.3.3.tar.gz',
        'https://builds.openlogic.com/downloadJDK/openlogic-openjdk-jre/11.0.8+10/openlogic-openjdk-jre-11.0.8+10-linux-x64.tar.gz'
    ])
    dest downloadFolder
    overwrite false
} 

/*task unpackLinuxLibs(dependsOn: downloadLinuxLibs, type: Copy) {
	fileTree(dir: "${buildDir}/downloads").include('*.tar.gz').each { tarFile ->
	   copy {
	      println "Untar $tarFile.name"
	      def name = tarFile.name - '.tar.gz'
	      from tarTree("${buildDir}/downloads/${tarFile.name}")
	      into "${buildDir}/downloads"       
	   }
	}
}
*/

task downloadMacLibs(type: Download) {
	downloadFolder.mkdirs()
    src([
        'https://builds.openlogic.com/downloadJDK/openlogic-openjdk-jre/11.0.8+10/openlogic-openjdk-jre-11.0.8+10-mac-x64.zip'
    ])
    dest downloadFolder
    overwrite false
} 


task downloadWindowsLibs(type: Download) {
	downloadFolder.mkdirs()
    src([
        'https://github.com/winsw/winsw/releases/download/v2.11.0/WinSW-x64.exe',
        'https://builds.openlogic.com/downloadJDK/openlogic-openjdk-jre/11.0.8+10/openlogic-openjdk-jre-11.0.8+10-windows-x64.zip'
    ])
    dest downloadFolder
    overwrite false
} 


task createMacInstaller(dependsOn: downloadMacLibs) {
  doLast {
     exec {
     	  workingDir "${buildDir}/resources/main"
          executable "${buildDir}/resources/main/create-mac-pkg.sh"
      }
  }
}

task createLinuxInstaller(dependsOn: downloadLinuxLibs) {
  doLast {
     exec {
     	  workingDir "${buildDir}/resources/main"
          executable "${buildDir}/resources/main/create-linux-pkg.sh"
      }
  }
}

task createWindowsInstaller(dependsOn: downloadWindowsLibs) {
  doLast {
     exec {
          workingDir "${buildDir}/resources/main"
          executable "${buildDir}/resources/main/create-windows-pkg.sh"
      }
  }
}
tasks.register('createInstallers')

//build.dependsOn unpackSharedLibs
unpackSharedLibs.dependsOn assemble
izPackCreateInstaller.dependsOn unpackSharedLibs
createMacInstaller.dependsOn izPackCreateInstaller
createLinuxInstaller.dependsOn izPackCreateInstaller
createWindowsInstaller.dependsOn izPackCreateInstaller
createInstallers.dependsOn(createMacInstaller,createLinuxInstaller,createWindowsInstaller)
